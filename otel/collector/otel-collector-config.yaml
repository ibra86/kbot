receivers:
  otlp:
    protocols:
      grpc: 
        endpoint: "0.0.0.0:4317"
      http: 
        endpoint: "0.0.0.0:3030"

exporters:
  logging:
    verbosity: basic
  file:
    path: /etc/logs/otelcol_data.log
  prometheus:  # monitoring metrics DB - Exports data in the Prometheus format, which allows it to be scraped by a Prometheus server.
    endpoint: "0.0.0.0:8889"  # the address on which metrics will be exposed - metrics will be available at https://0.0.0.0:8889/metrics.


service:

  pipelines:

    logs:
      receivers: [otlp]
      exporters: [logging, file]

    metrics:
      receivers: [otlp]
      # exporters: [logging]
      exporters: [logging, file, prometheus]

    traces:
      receivers: [otlp]
      exporters: [logging, file]
      # exporters: [logging]


# receivers:
#   otlp:
#     protocols:
#       grpc:
#       # http:
#       #   endpoint: "0.0.0.0:3030"

# exporters:
#   logging:
# #   loki:
# #     endpoint: http://loki:3100/loki/api/v1/push
# #   prometheus:
# #     endpoint: "0.0.0.0:8889"
# #   otlp:
# #     endpoint: tempo:4317
# #     tls:
# #       insecure: true
#   # jaeger:
#   #   endpoint: jaeger:14250
#   #   insecure: true
#   # otlp:
#   #   endpoint: localhost:14250
#   #   insecure: true
#   #   sending_queue:
#   #     num_consumers: 4
#   #     queue_size: 100
#   #   retry_on_failure:
#   #     enabled: true

# service:
#   pipelines:
#     logs:
#       receivers: [otlp]
#       exporters: [loki]
#     traces:
#       receivers: [otlp]
#       # exporters: [logging]
#       exporters: [logging, otlp]
#       # exporters: [logging, jaeger]
#     metrics:
#       receivers: [otlp]
#       exporters: [logging]
#       # exporters: [logging,prometheus]